#include<iostream>
#include <ctime>
using namespace std;

int NMInMAxA(int N);
int NMInMAxB(int N);
int NMInMAxC(int N);

int main(void)
{
int N;
srand(time(NULL));
cout « "A[i]" « endl;
N = rand() % 10 + 1;

NMInMAxA(N);

NMInMAxB(N);

NMInMAxC(N);


return 0;
}


int NMInMAxA(int N)
{
double* A = new double[N];
for (int i = 0; i < N; i++)
{
A[i] = rand() % 100;
}

for (int i = 0; i < N; i++)
{
cout « A[i] « "\t";
}
cout « endl;

int max,MaxNA;
max = A[0];

for (int i = 1; i < N; i++)
{

if (A[i] > max)
{
max = A[i];
MaxNA = i + 1;
}
}
cout « "NMax:" « max « endl;
cout « "MaxNA:" « MaxNA « endl;

int min,MinNA;
min = A[0];

for (int i = 1; i < N; i++)
{
if (A[i] < min)
{
min = A[i];
MinNA = i + 1;
}

}
cout « "NMin:" « min « endl;
cout « "MinNA:" « MinNA « endl;

delete[] A;

return 0;
}


int NMInMAxB(int N)
{
double* B = new double[N];
for (int i = 0; i < N; i++)
{
B[i] = rand() % 100;
}

for (int i = 0; i < N; i++)
{
cout « B[i] « "\t";
}
cout « endl;

int max1, MaxNA1;
max1 = B[0];

for (int i = 1; i < N; i++)
{

if (B[i] > max1)
{
max1 = B[i];
MaxNA1 = i + 1;
}
}
cout « "NMax:" « max1 « endl;
cout « "MaxNA:" « MaxNA1 « endl;

int min1, MinNA1;
min1 = B[0];

for (int i = 1; i < N; i++)
{
if (B[i] < min1)
{
min1 = B[i];
MinNA1 = i + 1;
}

}
cout « "NMin:" « min1 « endl;
cout « "MinNA:" « MinNA1 « endl;

delete[] B;

return 0;
}



int NMInMAxC(int N)
{
double* C = new double[N];
for (int i = 0; i < N; i++)
{
C[i] = rand() % 100;
}

for (int i = 0; i < N; i++)
{
cout « C[i] « "\t";
}
cout « endl;

int max2, MaxNA2;
max2 = C[0];

for (int i = 1; i < N; i++)
{

if (C[i] > max2)
{
max2 = C[i];
MaxNA2 = i + 1;
}
}
cout « "NMax:" « max2 « endl;
cout « "MaxNA:" « MaxNA2 « endl;

int min2, MinNA2;
min2 = C[0];

for (int i = 1; i < N; i++)
{
if (C[i] < min2)
{
min2 = C[i];
MinNA2 = i + 1;
}

}
cout « "NMin:" « min2 « endl;
cout « "MinNA:" « MinNA2 « endl;

delete[] C;

return 0;
}
